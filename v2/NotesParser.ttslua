#include StringUtil

local NotesParser = {}

NotesParser["options"] = {
  entry_delimiter = "|",
  pair_delimiter = ":"
}

NotesParser["getValue"] = function(obj, key)
  return NotesParser.getValueFromNotes(obj.getGMNotes(), key)
end

NotesParser["getValueFromNotes"] = function(notes, key)
  local map = StringUtil.splitStringIntoMap(notes, NotesParser.options.entry_delimiter, NotesParser.options.pair_delimiter)

  for k, v in pairs(map) do
    if k == key then
      return v
    end
  end
  return nil
end

NotesParser["setValue"] = function(obj, key, value)
  local map

  if not obj.getGMNotes() then
    print("The given object does not have GM notes, so they cannot be set.")
    return false
  end

  if obj.getGMNotes() == "" then
    map = {}
  else
    map = StringUtil.splitStringIntoMap(obj.getGMNotes(), NotesParser.options.entry_delimiter, NotesParser.options.pair_delimiter)
  end

  map[key] = value
  if map[key] == "" then
    map[key] = nil
  end

  obj.setGMNotes(StringUtil.joinMapToString(map, NotesParser.options.entry_delimiter, NotesParser.options.pair_delimiter))
  return true
end

NotesParser["hasValue"] = function(obj, key)
  local map = StringUtil.splitStringIntoMap(obj.getGMNotes(), NotesParser.entry_delimiter, NotesParser.pair_delimiter)

  for k, v in pairs(map) do
    if k == v then
      return true
    end
  end
end
